
NotesParser

                                            Monday, October 15, 2018 (8:50 AM)

+   Objective: A Python tool to convert my analysis-notes text files into
    HTML files with hyperlinks to images in the same folder as the
    notes file.

    *   Base this off the "Instant Markup" project in chapter 20 of
        "Beginning Python" (Magnus Lie Hetland, 2nd edition).
                see beginning_python_cover_a.jpg
        -   The source code is available at
                    http://www.apress.com
            >   It offers the choice to "Use Git or checkout with SVN using
                the web URL."
                    https://github.com/Apress/beg-python.git
                I REALLY need to get moving with GIT!
            >   For now, download the ZIP. The code I want is in
                    D:\Users\Owner\Documents\OneDrive\2018\notesparser
                        \beg-python-master.zip\beg-python-master
                        \978-1-59059-982-2\Chapter20\
        -   According to the book, I run this at the command line with
                D:\...> python markup.py < test_input.txt > test_output.html
            IT WORKS!!
                                        Thursday, October 18, 2018 (11:00 AM)
        -   Some fake notes.

                                        Thursday, October 18, 2018 (11:07 AM)
    *   More fake notes...
        -   Try a long URL:
                    https://stackoverflow.com/questions/14620863
                        /git-add-all-subdirectories
            just to see if I can get it to work right.
        -   After that, we can try images.
                                        Tuesday, October 23, 2018 (9:45 AM)
        -   And here is a PNG image file
                see github_repository_a.png
            to add to the JPG above.


                                            Monday, November 26, 2018 (7:50 AM)
+   Test creation-date sorting with an image index.

    *   Test the index (e.g., creation-date sorting) with an image index.
        -   It is time to create a sampledata folder to contain test_input.txt
            notes and images. That means I have to create the folder and
            move versioned files into it. Read help.
            >   Create the folder sampledata. Nothing special.
            >   Select the files, right-drag them into sampledata, and select
                "GIT move versioned items here" (or something like that).
            >   Get a set of images and list them:
                        xmsn_bolt_vibration_p01.jpg
                        xmsn_bolt_vibration_p02.jpg
                        xmsn_bolt_vibration_p03.jpg
                        xmsn_bolt_vibration_p04.jpg
                        xmsn_bolt_vibration_p05.jpg
                        xmsn_bolt_vibration_p06.jpg
                        xmsn_bolt_vibration_p07.jpg
                        xmsn_bolt_vibration_p08.jpg
                        xmsn_bolt_vibration_p09.jpg
                        xmsn_bolt_vibration_p10.jpg
                        xmsn_bolt_vibration_p11.jpg
                        xmsn_bolt_vibration_p12.jpg
                        xmsn_bolt_vibration_p13.jpg
                        xmsn_bolt_vibration_p14.jpg
                        xmsn_bolt_vibration_p15.jpg
                        xmsn_bolt_vibration_p16.jpg
                        xmsn_bolt_vibration_p17.jpg
                        xmsn_bolt_vibration_p18.jpg
                        xmsn_bolt_vibration_p19.jpg
                        xmsn_bolt_vibration_p20.jpg
                        xmsn_bolt_vibration_p21.jpg
                        xmsn_bolt_vibration_p22.jpg
                        xmsn_bolt_vibration_p23.jpg
                        xmsn_bolt_vibration_p24.jpg
                Of course, these can be sorted alphabetically or by creation
                date. Right-drag them into sampledata and select
                "GIT copy and add files to this WC"
            >   Commit and push.


+   Refinements
    *   Move the "WRITE HTML" button to bottom. Add a CLOSE button next to it.
        It works.
        -   Commit and push.
    *   Trap error if WRITE button is pressed with empty or invalid input file.
        It works.
            see notestohtml_gui_d.png
    *   Support other files (txt, pdf, doc, xls, etc...).
        -   To do this, I need to read all files in the directory and
            eliminate .html files from the list. Experiment in scratch.py.
            Tricky. I have to work with a copy of the file list while
            deleting items from the original list. I think I've got it:
        -   I should have a way to test it. Add a couple files:
                dummy.xlsx
                DummyDocument.docx
            Try it:


